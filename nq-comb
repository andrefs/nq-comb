#!/usr/bin/env perl

#PODNAME: nq-comb

use Data::Validate::URI qw/is_web_uri/;

use strict; use warnings;
use feature qw/say/;

my $pn_chars_base   = qr/[A-Za-z\x{00C0}-\x{00D6}\x{00D8}-\x{00F6}\x{00F8}-\x{02FF}\x{0370}-\x{037D}\x{037F}-\x{1FFF}\x{200C}-\x{200D}\x{2070}-\x{218F}\x{2C00}-\x{2FEF}\x{3001}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFFD}\x{10000}-\x{EFFFF}]/;
my $pn_chars_u      = qr/$pn_chars_base|_|:/;
my $pn_chars        = qr/$pn_chars_u|[\-0-9\x{00B7}\x{0300}-\x{036F}\x{203F}-\x{2040}]/;
my $echar           = qr/\\[tbnrf"'\\]/;
my $hex             = qr/[0-9A-Fa-f]/;
my $uchar           = qr/\\u$hex{4}|\\U$hex{8}/;
my $strLitQuote     = qr/"(?:[^\x{22}\x{5C}\x{A}\x{D}]|$echar|$uchar)*"/;
my $iriRef          = qr/(?:[^\x{00}-\x{20}<>"{}|^`\\]|$uchar)+/;
my $langTag         = qr/@[a-zA-Z]+(?:-[a-zA-Z0-9]+)*/;
my $lit             = qr/$strLitQuote(?:\^\^<$iriRef>|$langTag)?/;
my $blLabel         = qr/_:(?:$pn_chars_u|[0-9])(?:(?:$pn_chars|\.)*$pn_chars)?/;

my $sub  = qr/<(?<sIri>$iriRef)>|$blLabel/;
my $pred = qr/<(?<pIri>$iriRef)>/;
my $obj  = qr/<(?<oIri>$iriRef)>|$blLabel|$lit/;
my $gLab = qr/<(?<gIri>$iriRef)>|$blLabel/;

my $quad = qr/$sub\s+$pred\s+$obj(?:\s+$gLab)?\s*\./;
my $comment = qr/#.*/;

while(my $line = <>){
    # fix percent signs
    $line =~ s/%([^0-9A-Fa-f])/%25$1/g;

    # fix \r\n
    $line =~ s/\r?\n?$//;

    if($line !~ /^\s*$quad?\s*$comment?$/){
        print STDERR "[Line $. invalid syntax] ";
        say STDERR $line;
        next;
    }

    if ($+{sIri} && !is_web_uri($+{sIri} =~ s/$uchar//gr)){
        print STDERR "[Line $. invalid subject IRI] ";
        say STDERR $+{sIri};
        next;
    }
    if ($+{pIri} && !is_web_uri($+{pIri} =~ s/$uchar//gr)){
        print STDERR "[Line $. invalid predicate IRI] ";
        say STDERR $+{pIri};
        next;
    }
    if ($+{oIri} && !is_web_uri($+{oIri} =~ s/$uchar//gr)){
        print STDERR "[Line $. invalid object IRI] ";
        say STDERR $+{oIri};
        next;
    }
    if ($+{gIri} && !is_web_uri($+{gIri} =~ s/$uchar//gr)){
        print STDERR "[Line $. invalid graph IRI] ";
        say STDERR $+{gIri};
        next;
    }

    say $line;
}
